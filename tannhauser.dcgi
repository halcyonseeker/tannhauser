#!/bin/sh
# A basic gopher-gemini gateway
# Dependencies:
# - nmap: ncat, to make a Gemini request. There should be a way to do this
#         with open/libre ssl and ordinary netcat.
# - Geomyidae: A Gopher server. I don't know whether or not its CGI system
#              is standard.

print_debug() {
    printf "+----------------+-----------------------------------------+\n"
    [ -n "$search" ]    && printf "| (1) \$search    : %s\n" "$search"
    [ -n "$arguments" ] && printf "| (2) \$arguments : %s\n" "$arguments"
    [ -n "$host" ]      && printf "| (3) \$host      : %s\n" "$host"
    [ -n "$port" ]      && printf "| (4) \$port      : %s\n" "$port"
    [ -n "$url" ]       && printf "| \$url           : %s\n" "$url"
    [ -n "$host" ]      && printf "| \$host          : %s\n" "$host"
    [ -n "$status" ]    && printf "| \$status        : %s\n" "$status"
    [ -n "$code" ]      && printf "| \$code          : %s\n" "$code"
    [ -n "$mime" ]      && printf "| \$mime          : %s\n" "$mime"
    printf "+----------------+-----------------------------------------+\n"
}

# Geomyidae CGI command line
search="$1"
arguments="$2"
host="$3"
port="$4"

# Needed to send the request and assemble working links
if [ -n "$arguments" ]; then
    url="gemini://$(echo "$arguments" | cut -d '?' -f2)"
    host="$(echo "$url" | cut -d '/' -f3)"
else
    printf "CGI Error: \$search and \$arguments are empty\n"
    printf "I haven't implemented selector 7 yet\n"
    print_debug
fi

# ncat doesn't like host:port URIs
host="${host%%:1965}"

if [ -n "$url" ] && [ -n "$host" ] ; then
    printf "%s\r\n\r\n" "$url" |  ncat --ssl "$host" 1965 >/tmp/astrogate || {
        printf "Request Error: Failed to reach remote host\n"
        print_debug
        rm -f /tmp/astrogate
    }

    status="$(head -1 /tmp/astrogate)"
    code="$(echo "$status" | cut -d ' ' -f1)"
    mime="$(echo "$status" | cut -d ' ' -f2 | tr -d ';')"

    [ -z "$status" ] && {
        printf "CGI Error: gemini response (\$status line) is empty\n"
        print_debug
        rm -f /tmp/astrogate
        exit 1
    }

    print_debug

    if [ "$code" = "20" ] ; then  # Everything is okay
        path="${url##gemini:\/\/}"
        case "$mime" in
            "text/gemini")
                sed "s/\t/ /g; 1 d" /tmp/astrogate \
                    | awk -v path="$path" -v host="$host" -f ./gmi2gph.awk
            ;;
            "text/plain")
                sed "s/\t/ /g; 1 d" /tmp/astrogate
            ;;
            *)
                # TODO: differentiate between text for display and binary to dl
                printf "WARNING: \$mime (%s) is something else\n" "$mime"
                sed "s/\t/ /g; 1 d" /tmp/astrogate \
                    | awk -v path="$path" -v host="$host" -f ./gmi2gph.awk
            ;;
        esac
    else
        printf "Gemini Error: %s\n" "$status"
        print_debug
        rm -f /tmp/astrogate
        exit 1
    fi

    rm -f /tmp/astrogate
else
    printf "CGI error: \$url and/or \$host are empty\n"
    print_debug
    exit 1
fi

exit 0
