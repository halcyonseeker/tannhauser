#!/bin/sh
# A basic gopher-gemini gateway
# Dependencies:
# - nmap: ncat, to make a Gemini request. There should be a way to do this
#         with open/libre ssl and ordinary netcat.
# - Geomyidae: A Gopher server. I don't know whether or not its CGI system
#              is standard.

# Geomyidae CGI command line
search="$1"
arguments="$2"
host="$3"
port="$4"

# Needed to send the request and assemble working links
if [ -n "$arguments" ]; then
    query_url="gemini://$(echo "$arguments" | cut -d '?' -f2)"
    query_host="$(echo "$query_url" | cut -d '/' -f3)"
else
    printf "CGI Error: \$search and \$arguments are empty\n"
    printf "I haven't implemented selector 7 yet\n"
    printf "(1) \$search    : %s\n" "$search"
    printf "(2) \$arguments : %s\n" "$arguments"
    printf "(3) \$host      : %s\n" "$host"
    printf "(4) \$port      : %s\n" "$port"
fi

if [ -n "$query_url" ] && [ -n "$query_host" ] ; then
    printf "%s\r\n" "$query_url" |  ncat --ssl "$query_host" 1965 >/tmp/astrogate || {
        printf "Request Error: Failed to reach remote host\n"
        printf "+----------------+-----------------------------------------+\n"
        printf "| (1) \$search    : %s\n" "$search"
        printf "| (2) \$arguments : %s\n" "$arguments"
        printf "| (3) \$host      : %s\n" "$host"
        printf "| (4) \$port      : %s\n" "$port"
        printf "| \$query_url     : %s\n" "$query_url"
        printf "| \$query_host    : %s\n" "$query_host"
        printf "+----------------+-----------------------------------------+\n"
        rm -f /tmp/astrogate
    }

    status="$(head -1 /tmp/astrogate)"
    code="$(echo "$status" | cut -d ' ' -f1)"
    mime="$(echo "$status" | cut -d ' ' -f2 | tr -d ';')"

    [ -z "$status" ] && {
        printf "CGI Error: gemini response (\$status line) is empty\n"
        printf "+----------------+-----------------------------------------+\n"
        printf "| (1) \$search    : %s\n" "$search"
        printf "| (2) \$arguments : %s\n" "$arguments"
        printf "| (3) \$host      : %s\n" "$host"
        printf "| (4) \$port      : %s\n" "$port"
        printf "| \$query_url     : %s\n" "$query_url"
        printf "| \$query_host    : %s\n" "$query_host"
        printf "+----------------+-----------------------------------------+\n"
        rm -f /tmp/astrogate
        exit 1
    }

    if [ "$code" = "20" ] ; then  # Everything is okay
        path="${query_url##gemini:\/\/}"
        case "$mime" in
            "text/gemini")
                sed "s/\t/ /g; 1 d" /tmp/astrogate \
                    | awk -v path="$path" -v host="$query_host" -f ./gmi2gph.awk
            ;;
            "text/plain")
                sed "s/\t/ /g; 1 d" /tmp/astrogate
            ;;
            *)
                # TODO: differentiate between text for display and binary to dl
                printf "WARNING: \$mime (%s) is something else\n" "$mime"
                sed "s/\t/ /g; 1 d" /tmp/astrogate \
                    | awk -v path="$path" -v host="$query_host" -f ./gmi2gph.awk
            ;;
        esac
    else
        printf "Gemini Error: %s\n" "$status"
        printf "+----------------+-----------------------------------------+\n"
        printf "| (1) \$search    : %s\n" "$search"
        printf "| (2) \$arguments : %s\n" "$arguments"
        printf "| (3) \$host      : %s\n" "$host"
        printf "| (4) \$port      : %s\n" "$port"
        printf "| \$query_url     : %s\n" "$query_url"
        printf "| \$query_host    : %s\n" "$query_host"
        printf "| \$status        : %s\n" "$status"
        printf "| \$code          : %s\n" "$code"
        printf "| \$mime          : %s\n" "$mime"
        printf "+----------------+-----------------------------------------+\n"
        rm -f /tmp/astrogate
        exit 1
    fi

    rm -f /tmp/astrogate
else
    printf "CGI error: \$query_url and/or \$query_host are empty\n"
    printf "+----------------+-----------------------------------------+\n"
    printf "| (1) \$search    : %s\n" "$search"
    printf "| (2) \$arguments : %s\n" "$arguments"
    printf "| (3) \$host      : %s\n" "$host"
    printf "| (4) \$port      : %s\n" "$port"
    printf "| \$query_url     : %s\n" "$query_url"
    printf "| \$query_host    : %s\n" "$query_host"
    printf "+----------------+-----------------------------------------+\n"
    exit 1
fi

exit 0
